{\rtf1\ansi\ansicpg1252\deff0\deflang16393{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\fnil\fcharset0 URWBookmanL-Ligh;}{\f2\fswiss\fprq1\fcharset0 Courier New;}{\f3\froman\fcharset0 Times New Roman;}{\f4\fswiss\fcharset0 Arial;}}
{\colortbl ;\red197\green0\blue11;\red0\green255\blue0;\red0\green0\blue255;\red255\green255\blue255;\red0\green0\blue128;}
{\*\generator Msftedit 5.41.21.2507;}\viewkind4\uc1\pard\lang1023\b\i\f0\fs24\tab\tab\tab\tab\tab\tab\cf1\fs32 GIT\cf0\fs24\par
\fs32\par
\b0\i0\fs24\tab\tab\tab\tab Git is a free & open source, distributed version control system designed to handle everything from small to very large projects with speed and efficiency.\par
Every Git clone is a full-fledged repository with complete history and full revision tracking capabilities, not dependent on network access or a central server. Branching and merging are fast and easy to do.\par
\tab\tab\tab\tab Git is used for version control of files, much like tools such as Mercurial, Bazaar, Subversion, CVS, Perforce, and Visual SourceSafe.\par
\par
\cf1\b\i GIT Keywords\par
\cf0\b0\i0\par
\b\i 1.Repository :\tab\tab The repository is the place where the version control system keeps track\b0\i0\par
\b\i of all the changes you make. Most VCSs store the current state of the code, along with when each change was made, who made it, and a text log message that explains why they made the change.\par
\tab\tab\tab You can think of a repository like a bank vault and its history like the\b0\i0\par
\b\i ledger. Each time a deposit\emdash what is called a commit in VCS lingo\emdash is made, your VCS tool adds an entry to the ledger and stores the changes for safekeeping.\b0\i0\par
\par
\b\i 2.\cf1 Working Tress\cf0  :\tab working tree is your current view into the repository. It has all the files fromyour project: the source code, build files, unit tests, and so on\b0\i0\par
\b\i\par
3.\cf1 Branches\cf0  : Logical view of the repository whick keep tracking the changes seperately apart from master branch(default branch in the repository)\b0\i0\par
\par
\pard\fi-360\li360\b\i\f1 4.\tab\cf1\f0 Revision \cf0 : Changes made after each commit is revision\par
\f1 5.\tab\cf1\f0 Merging\cf0  :  compress two or more branches into one branch\b0\i0\par
\b\i\f1 6.\tab\cf1\f0 add \cf0 :pushing the file from working directory to staging area[staged files]\b0\i0\par
\b\i\f1 7.\tab\cf1\f0 commit\cf0  :pushing ths changes from staging area to workspace\b0\i0\par
\b\i\f1 8.\tab\cf1\f0 push\cf0  : pushing the changes from our local git repositry to remote repository\b0\i0\par
\pard\b\i\par
\cf1 Git Workflow :\par
\cf0\par
\b0\i0\par
\cf1\b\i u dont need to create a new repository as i have already creted for us , u can access the repository thru this URL mentioned below\par
\cf0\par
\cf2 How to create a  new remote repository in the web :\par
 \tab                    1.  go to  \cf0\lang255 https://github.com/\lang1023\par
\pard\fi-360\li1800\cf2\f1 2.\tab\f0 create a new account  for u and log in\par
\f1 3.\tab\cf0\f0 create a new repository by clicking new repository button\b0\i0\par
\cf2\b\i\f1 4.\tab\cf0\f0 under the \ldblquote create a New Repository\rdblquote  page give ur project Name  [eg. Lunar_codes]and click create repository\b0\i0\par
\cf2\b\i\f1 5.\tab\cf0\b0\i0\f0  \b\i once creted u wl get this page which will show the URL of our profect\b0\i0\par
\cf1\b\i\f1\tab\f0 URL  \fs30 git://github.com/FetchMail/Lunar_codes.git\fs24\par
\cf2\f1 6.\tab\f0 This is the URL we will be using through out the application , kindly note\par
\pard\cf0\par
\tab\b0\i0\par
\par
\cf1\b\i How to install and create a local repository in ur PC\par
\cf0\par
Go to this link \lang255 http://code.google.com/p/msysgit/downloads/list\lang1023 #\b0\i0\par
\par
\b\i download this exe Git-1.6.5.1-preview20091022 [ Full installer (self-contained) if you want to hack on Git] , install this exe and give the location to download ,\b0\i0\par
\par
\b\i once it got downloaded go to this folder c:\\msygit\\msygit , double click the \ldblquote git-cmd \ldblquote batch file\b0\i0\par
\par
\b\i it will show one command prompt , in that type git and hit enter, it will list out all the git commands this will ensure that git was proerly installed in ur PC\b0\i0\par
\par
\b\i enter ur identity information in git command prompt \b0\i0\par
\par
\b\i\f2\fs20 git config --global user.name "Your Name"\par
\b0\i0 git config --global user.email selvam.ragav@gmail.com\par
\b\i\fs24\par
\b0\i0\par
\par
\cf1\b\i\f0 Create your public keys [one time setup]\f2\par
\cf0\par
\f0 while installing git exe , .ssh folder will be created [C:\\Users\\selvam4v\\.ssh]\b0\i0\f2\par
\b\i\f0 go to that .ssh folder thu git command prompt enter    ssh-keygen\b0\i0\f2\par
\b\i\f0 it will ask \b0\i0\f2\par
\b\i\f0 1.\cf4 Enter file in which to save the key (/Users/username/.ssh/id_rsa): # press enter key \cf0\b0\i0\f2\par
\b\i\f0\tab 2.\cf1 enter passphrase : give some password  here and note it down this will be asking when ever u perform push operation\cf0\b0\i0\f2\par
\cf1\b\i\par
\cf0\par
\cf4\f0 user# cd ~/.ssh\f2\par
\cf0\b0\i0\f0 user# ssh-\cf4\b\i keygen\cf0\b0\i0\f2\par
\cf4\b\i\f0 Generating public/private rsa key pair.\f2\par
\cf0\f0 Enter file in which to save the key (/Users/username/.ssh/id_rsa): # press enter here\b0\i0\f2\par
\b\i\f0 Enter passphrase (empty for no passphrase): # type in your passphrase here\b0\i0\f2\par
\b\i\f0 Enter same passphrase again: # type your passphrase again\b0\i0\f2\par
\b\i\f0 Your identification has been saved in /Users/username/.ssh/id_rsa.\b0\i0\f2\par
\b\i\f0 Your public key has been saved in /Users/username/.ssh/id_rsa.pub.\b0\i0\f2\par
\b\i\f0 The key fingerprint is:\b0\i0\f2\par
\b\i\f0 50:43:77:c6:97:af:61:82:dc:ea:9b:6b:67:d4:1b:61 {\field{\*\fldinst{HYPERLINK "mailto:user@host" }}{\fldrslt{\cf5\lang255\ul user@host}}}\cf0\lang1023\ulnone\b0\i0\f2\fs24\par
\par
\b\i\f0 The public key will be saved in /Users/username/.ssh/id_rsa.pub file \f2\par
\b0\i0\par
\b\i\f0 open the file and copy the key , it looks like \b0\i0\f2\par
\par
\b\i\f0 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAwLlGu/M9pov1jTXnns0xEszLQwEgqvMLAsmcvVeilSS8zum+IBoxm2IJoUCFyvMLQqxmJEbJ1Hvg8TE1pi24RTkRQupIwZ9kFoLjFJbFBaiRr0xeY6tCpl9rbUGbPIFiHz5uB0jYnQTvjvx4T3lA4DAFH53sxNlYznCAm6cgXDvqjcK5pQLJsc4dl5OFlJHekYlNTuC9P8VClO79qHxvlmcsiYYAy9KJQe5OOQl/+Ga0dii918pXZHh73LinqSxjmEOsJtukFaG7Of272/5LN0QQsJSrqCrH18cm2OPv6XMEp76Yb1KbHajgTIBsjbIadFmjnzjbgw06HjtTT/sYfQ== \b0\i0{\field{\*\fldinst{HYPERLINK "mailto:selvam4v@SELVAM4V-PC" }}{\fldrslt{\cf5\lang255\ul selvam4v@SELVAM4V-PC}}}\cf0\lang1023\ulnone\f2\fs24\par
\b\i\par
\b0\i0\par
\b\i\f0 once the key is copied we should give this key to remote repository to give permission:\b0\i0\f2\par
\par
\cf1\b\i\f0 u just send me the public keys to me i wll add this to our repository , so every one who want to access the repository should generate the public key and send to me i wl update\f2\par
\cf2\par
\cf0\f0 go to github.com , login into ur user id and password\b0\i0\f2\par
\par
\b\i\f0 get into account setting , there is one SSH Public keys method\b0\i0\f2\par
\cf2  \par
\cf0\f0 in that click  Add ur public key , give title as anything , and paste ur key in key section\par
\f2\par
\par
\par
\par
\par
\f0 windows command prompt\f2\par
\par
\f0 double click the git-cmd in \b\i c:\\msygit\\msygit\\ directory\b0\i0\f2\par
\par
\par
\f0 Steps for ceating the new local repository :\f2\par
\f0 ------------------------------------------------------------------------------------------------------------------------\f2\par
\f0 We  can create a local repository by clonning the remote repository\f2\par
\f3\tab\tab git clone \cf1\b\fs32 git@\i\f0 github\fs30 .com/FetchMail/Lunar_codes.git\cf0\b0\i0\f2\fs24\par
\cf2\f0 ------------------------------------------------------------------------------------------------------------------------\f2\par
\cf0\f0\tab\tab\tab\tab OR\f2\par
\par
\f0 1. \b  go this folder \i c:\\msygit\\msygit\\git\\\b0\i0\f2\par
\f0 under this folder only we want to create our project say , mkdir Fetch_Mail_V1.0\f2\par
\par
\f0 under this folder--------------------> cd  \b\i c:\\msygit\\msygit\\git\\Fetch_Mail_V1.0 \b0\i0\f2\par
\b\i\par
\f0 initialise ur repository :using git init\b0\i0\f2\par
\par
\f0 C:\\>cd msysgit\\msysgit\\git\\\f2\par
\par
\f0 C:\\msysgit\\msysgit\\git>cd Fetch_Mail_V1.0\f2\par
\par
\f0 C:\\msysgit\\msysgit\\git\\Fetch_Mail_V1.0>git init\f2\par
\f0 Initialized empty Git repository in C:/msysgit/msysgit/git/Fetch_Mail_V1.0/.git/\f2\par
\par
\f0 C:\\msysgit\\msysgit\\git\\Fetch_Mail_V1.0>\f2\par
\par
\f0 .git folder will be created in  Fetch_Mail_V1.0 [Local Repository]\f2\par
\par
\f0 under fetch_Mail_V1.0 we will be creating many project , we should not disturb .git folder\f2\par
\par
\par
\f0 once the local repository created we have to create projects inside this folder\f2\par
\par
 \f0 add HelloWorld.java file under C:\\msysgit\\msysgit\\git\\Fetch_Mail_V1.0\\Lunar_codes directory\f2\par
\pard\par
\pard\par
\par
\f0 To add HelloWorld.java to the staging area \f2\par
\par
\f0 C:\\msysgit\\msysgit\\git\\Fetch_Mail_V1.0\\Lunar_codes> git add HelloWorld.java\f2\par
\par
\f0 To see the status of the file\f2\par
\par
\f0 C:\\msysgit\\msysgit\\git\\Fetch_Mail_V1.0\\Lunar_codes> git staus\f2\par
\par
\f0 it will show changed but not commited\f2\par
\par
\f0 To commit the file to Local repository :\f2\par
\par
\f0 C:\\msysgit\\msysgit\\git\\Fetch_Mail_V1.0\\Lunar_codes> git commit -m \ldblquote commit message \ldblquote\f2\par
\par
\f0 it wl commit all the changed files in the staging area\f2\par
\par
\f3 specifing remote repository\par
\f2\fs20 C:\\msysgit\\msysgit\\git\\Fetch_Mail_V1.0\\Lunar_codes> git remote add origin \f3\fs24 git@github.com:FetchMail/Lunar_codes.git\par
\par
\par
\par
\f0 to push the file from local repositoty to remote repository\f3\par
\par
\f2\fs20 C:\\msysgit\\msysgit\\git\\Fetch_Mail_V1.0\\Lunar_codes>git push origin master\par
\fs24\par
\fs20 it will ask the passphrase key , and then file is pushed to the remote repository\fs24\par
\pard\fs20\par
\pard\f0\fs24 Before working out the source sync the local repository with remote epository using pull command\f2\par
\par
\f0 To pull the file from the remote repository to local repository\f2\par
\pard\f0\tab\tab git pull origin master\f2\par
\pard\fs20\par
To add all the files in that particular folder into the staging area\fs24\par
\fs20\tab\tab\tab git add *\fs24\par
\par
\pard\fs20\tab\par
\pard\par
\fs24\par
\fs20 we have created all the files under master branch only\fs24\par
\par
\fs20 master branch is the default branch for us , later we will create new branch and merge it\fs24\par
\par
\pard\fs20\par
\pard\par
\fs24\par
\par
\fs20\par
\fs24\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\lang16393\f4\fs20\par
}
 